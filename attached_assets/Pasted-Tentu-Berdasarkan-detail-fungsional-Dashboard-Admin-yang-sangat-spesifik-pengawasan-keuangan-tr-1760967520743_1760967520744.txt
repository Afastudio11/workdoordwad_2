Tentu. Berdasarkan detail fungsional Dashboard Admin yang sangat spesifik (pengawasan, keuangan, *troubleshooting*, dan moderasi AI), dan kebutuhan Anda untuk memastikan semua sistem berjalan sesuai skema desain **Lime Green**, berikut adalah *prompt* komprehensif untuk *Automated Testing* berbasis AI.

*Prompt* ini akan menguji setiap modul yang kita definisikan sebelumnya untuk mencari *missing links* atau *error* dalam *data flow* dan *visuals*.

---

# PROMPT VERIFIKASI SISTEM DASHBOARD ADMIN (AI-POWERED E2E TEST)

**Peran AI:** Anda adalah **Quality Assurance Lead** yang menggunakan *framework* E2E (Playwright/Cypress) untuk memverifikasi fungsionalitas dan integritas visual **Dashboard Admin Pintu Kerja** setelah *deployment*.

**Instruksi:** Rancang 5 skenario pengujian kritis, yang masing-masing harus mencakup validasi fungsionalitas *backend* (data, *permissions*) dan *frontend* (*UI/UX* *Lime Green*).

### Skenario 1: Integritas Visual & Keamanan Akses

Tujuan: Memastikan Admin Header dan Layout yang benar dimuat, serta akses aman.

| Langkah Uji (Aksi) | Harapan Uji (Validasi) | Fokus Pengujian |
| :--- | :--- | :--- |
| **1.1 Login Admin** | Akun berhasil login setelah otentikasi **2FA** (menguji *middleware* keamanan). | **KEAMANAN & AUTENTIKASI** |
| **1.2 Verifikasi Layout** | Halaman Ringkasan dimuat. **`AdminLayout`** harus dimuat. **`WorkerLayout`** atau `RecruiterLayout` harus GAGAL dimuat. | **ISOLASI KOMPONEN** (Cek *routing* yang salah). |
| **1.3 Verifikasi Aksen** | Tombol utama seperti "Setujui & Publikasikan" (jika ada) dan *badge* "Antrean Review" menggunakan warna **Lime Green**. | **INTEGRITAS VISUAL (COLOR PALETTE)** |

### Skenario 2: Moderasi Konten (UVP) dan Sinkronisasi Pencarian

Tujuan: Memverifikasi alur kerja moderasi lowongan hasil *scraping* AI.

| Langkah Uji (Aksi) | Harapan Uji (Validasi) | Fokus Pengujian |
| :--- | :--- | :--- |
| **2.1 Akses Moderasi** | Navigasi ke **"Antrean AI Review"** (Modul 2) dan melihat lowongan mentah (data *seeded*). | **PERMISSIONS:** Memastikan Admin dapat mengakses data ini. |
| **2.2 Aksi Setuju** | Admin mengklik tombol **"Setujui & Publikasikan"** (**Lime Green**). | **DATA FLOW:** Status lowongan di PostgreSQL diubah menjadi 'Active' dan **data segera diindeks ke Elasticsearch**. |
| **2.3 Validasi Pencarian** | Skrip beralih ke *Dashboard* Pekerja (Role: Worker) $\rightarrow$ Lakukan pencarian lowongan yang baru disetujui. | **ELASTICSEARCH SYNC:** Lowongan harus ditemukan dan memiliki label **"AI Source"** yang terlihat. |

### Skenario 3: Manajemen Pengguna & Keamanan

Tujuan: Memastikan Admin dapat mengatasi masalah akun.

| Langkah Uji (Aksi) | Harapan Uji (Validasi) | Fokus Pengujian |
| :--- | :--- | :--- |
| **3.1 Blokir Akun** | Admin mencari Akun Perekrut A di **"Manajemen Pengguna"** (Modul 3) $\rightarrow$ Klik **"Blokir Akun"** (warna Merah). | **DATA MUTATION:** `User.is_active` di *database* harus diubah menjadi `false`. |
| **3.2 Verifikasi Blokir** | Skrip mencoba login dengan kredensial Akun Perekrut A. | **KEAMANAN:** Login harus **GAGAL** (mengembalikan *error* 403 atau pesan diblokir). |
| **3.3 Verifikasi Perusahaan** | Admin mengklik tombol **"Verifikasi Akun"** (**Lime Green**) untuk Perusahaan B. | **SINKRONISASI:** Status `CompanyProfile.is_verified` harus diubah dan ikon verifikasi harus muncul pada *Job Card* Lowongan Perusahaan B di *feed* Pekerja. |

### Skenario 4: Audit Keuangan dan Transaksi

Tujuan: Menguji fungsi monetisasi dan laporan.

| Langkah Uji (Aksi) | Harapan Uji (Validasi) | Fokus Pengujian |
| :--- | :--- | :--- |
| **4.1 Laporan Pendapatan** | Akses **"Manajemen Keuangan"** (Modul 4) $\rightarrow$ Cek Grafik Pendapatan. | **DATA INTEGRITY:** Memastikan angka pendapatan di kartu Ringkasan sesuai dengan total di tabel transaksi. |
| **4.2 Uji Refund** | Admin memproses *refund* untuk *Transaction ID* tertentu. | **DATA FLOW:** Status transaksi di tabel harus berubah menjadi "Refunded". Sistem harus mencatat ID Admin yang memprosesnya (**Audit Trail**). |
| **4.3 Export Data** | Klik tombol **"Unduh Laporan CSV"** (**Lime Green**). | **FUNGSIONALITAS:** File CSV harus berhasil di-*download* dan datanya harus sesuai dengan tampilan tabel. |

### Skenario 5: Pemeriksaan Kesehatan Sistem (*Troubleshooting*)

Tujuan: Menguji Modul Sistem yang mendeteksi masalah.

| Langkah Uji (Aksi) | Harapan Uji (Validasi) | Fokus Pengujian |
| :--- | :--- | :--- |
| **5.1 Log Kritis** | Admin mengakses **"Sistem & Infrastruktur"** (Modul 5) $\rightarrow$ Melihat tabel *Log Server*. | **VISUALISASI EROR:** Pesan *error* (HTTP 500) harus disorot warna merah, dan *Log Aktivitas Admin* harus mencatat akses ini. |
| **5.2 Uji Koneksi DB** | Admin mengklik tombol **"Uji Koneksi Elasticsearch"**. | **HEALTH CHECK:** Sistem harus mengembalikan status **SUCCESS (Lime Green)** atau FAILED (Merah). |
| **5.3 Perubahan Konfigurasi** | Admin mengubah nilai **Harga *Booster*** di *Config Editor* $\rightarrow$ Simpan. | **DATABASE UPDATE:** Nilai di *database config table* harus diperbarui. Skrip harus memvalidasi perubahan harga *Booster* di *Dashboard Perekrut*. |